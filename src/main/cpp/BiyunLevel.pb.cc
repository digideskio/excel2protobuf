// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BiyunLevel.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BiyunLevel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Sheet1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sheet1_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BiyunLevel_2eproto() {
  protobuf_AddDesc_BiyunLevel_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BiyunLevel.proto");
  GOOGLE_CHECK(file != NULL);
  Sheet1_descriptor_ = file->message_type(0);
  static const int Sheet1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet1, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet1, star1_),
  };
  Sheet1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sheet1_descriptor_,
      Sheet1::default_instance_,
      Sheet1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sheet1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sheet1));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BiyunLevel_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sheet1_descriptor_, &Sheet1::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BiyunLevel_2eproto() {
  delete Sheet1::default_instance_;
  delete Sheet1_reflection_;
}

void protobuf_AddDesc_BiyunLevel_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020BiyunLevel.proto\"&\n\006Sheet1\022\r\n\005level\030\001 "
    "\001(\r\022\r\n\005star1\030\002 \001(\rB\021\n\017wang.gnim.excel", 77);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BiyunLevel.proto", &protobuf_RegisterTypes);
  Sheet1::default_instance_ = new Sheet1();
  Sheet1::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BiyunLevel_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BiyunLevel_2eproto {
  StaticDescriptorInitializer_BiyunLevel_2eproto() {
    protobuf_AddDesc_BiyunLevel_2eproto();
  }
} static_descriptor_initializer_BiyunLevel_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Sheet1::kLevelFieldNumber;
const int Sheet1::kStar1FieldNumber;
#endif  // !_MSC_VER

Sheet1::Sheet1()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Sheet1)
}

void Sheet1::InitAsDefaultInstance() {
}

Sheet1::Sheet1(const Sheet1& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Sheet1)
}

void Sheet1::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0u;
  star1_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sheet1::~Sheet1() {
  // @@protoc_insertion_point(destructor:Sheet1)
  SharedDtor();
}

void Sheet1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sheet1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sheet1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sheet1_descriptor_;
}

const Sheet1& Sheet1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BiyunLevel_2eproto();
  return *default_instance_;
}

Sheet1* Sheet1::default_instance_ = NULL;

Sheet1* Sheet1::New() const {
  return new Sheet1;
}

void Sheet1::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Sheet1*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(level_, star1_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sheet1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Sheet1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_star1;
        break;
      }

      // optional uint32 star1 = 2;
      case 2: {
        if (tag == 16) {
         parse_star1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star1_)));
          set_has_star1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Sheet1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Sheet1)
  return false;
#undef DO_
}

void Sheet1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Sheet1)
  // optional uint32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // optional uint32 star1 = 2;
  if (has_star1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->star1(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Sheet1)
}

::google::protobuf::uint8* Sheet1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Sheet1)
  // optional uint32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // optional uint32 star1 = 2;
  if (has_star1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->star1(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Sheet1)
  return target;
}

int Sheet1::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 star1 = 2;
    if (has_star1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star1());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sheet1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sheet1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sheet1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sheet1::MergeFrom(const Sheet1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_star1()) {
      set_star1(from.star1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sheet1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sheet1::CopyFrom(const Sheet1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sheet1::IsInitialized() const {

  return true;
}

void Sheet1::Swap(Sheet1* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(star1_, other->star1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sheet1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sheet1_descriptor_;
  metadata.reflection = Sheet1_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
